"use strict";(self.webpackChunk_zignaly_open_ui=self.webpackChunk_zignaly_open_ui||[]).push([[9818],{"./src/components/display/ZigTypography/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__=__webpack_require__("../../node_modules/@mui/material/Typography/Typography.js").Z},"./src/components/inputs/ZigSlider/stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{WithLabel:()=>WithLabel,WithoutLabels:()=>WithoutLabels,default:()=>stories});var react=__webpack_require__("../../node_modules/react/index.js"),Box=__webpack_require__("../../node_modules/@mui/material/Box/Box.js"),Slider=__webpack_require__("../../node_modules/@mui/material/Slider/Slider.js"),ZigTypography=__webpack_require__("./src/components/display/ZigTypography/index.tsx"),jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const SliderLabelValue=({labels,side,max=100,min=0,value=0,labelFormat,prefixId})=>{const valueLabel="start"===side?labels.invertSliderValues?max-value:min:labels.invertSliderValues?value:max;let valueLabelStr=valueLabel.toString();return labelFormat?valueLabelStr=labelFormat(valueLabel):100===max&&null!==labelFormat&&(valueLabelStr=`${valueLabel}%`),(0,jsx_runtime.jsxs)(Box.Z,{display:"flex",flexDirection:"column",alignItems:"start"===side?"flex-start":"flex-end",minWidth:"44px",children:[(0,jsx_runtime.jsx)(ZigTypography.Z,{color:"neutral100",variant:"body2",sx:{position:"absolute",left:"start"===side?0:"auto",right:"start"===side?"auto":0,...!1!==labels.labelsAbove?{top:0}:{bottom:0}},id:prefixId&&`${prefixId}-label`,children:"start"===side?labels.start:labels.end}),(0,jsx_runtime.jsx)(ZigTypography.Z,{color:"neutral400",variant:"body2",id:prefixId&&`${prefixId}-value`,children:valueLabelStr})]})};SliderLabelValue.displayName="SliderLabelValue";try{SliderLabelValue.displayName="SliderLabelValue",SliderLabelValue.__docgenInfo={description:"",displayName:"SliderLabelValue",props:{labels:{defaultValue:null,description:"",name:"labels",required:!0,type:{name:"SliderLabels"}},side:{defaultValue:null,description:"",name:"side",required:!0,type:{name:"enum",value:[{value:'"end"'},{value:'"start"'}]}},max:{defaultValue:{value:"100"},description:"",name:"max",required:!1,type:{name:"number | undefined"}},min:{defaultValue:{value:"0"},description:"",name:"min",required:!1,type:{name:"number | undefined"}},value:{defaultValue:{value:"0"},description:"",name:"value",required:!1,type:{name:"number | undefined"}},labelFormat:{defaultValue:null,description:"",name:"labelFormat",required:!1,type:{name:"((value: number) => string | Element) | undefined"}},prefixId:{defaultValue:null,description:"",name:"prefixId",required:!0,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/inputs/ZigSlider/atoms.tsx#SliderLabelValue"]={docgenInfo:SliderLabelValue.__docgenInfo,name:"SliderLabelValue",path:"src/components/inputs/ZigSlider/atoms.tsx#SliderLabelValue"})}catch(__react_docgen_typescript_loader_error){}const ZigSlider=(0,react.forwardRef)((({labels={},prefixId,className="",valueLabelFormat,labelFormat=!0,...props},ref)=>{let valueLabelFormatDefaulted=valueLabelFormat;valueLabelFormatDefaulted||props.max&&100!==props.max||(valueLabelFormatDefaulted=value=>`${value}%`);let labelFormatDefaulted=valueLabelFormatDefaulted;labelFormat&&!0!==labelFormat&&(labelFormatDefaulted=labelFormat);const{start,end,showValues=!0,labelsAbove}=labels,showLabels=start||end,marks=[25,50,75].map((percentage=>({value:percentage*(props.max||100)/100})));return(0,jsx_runtime.jsxs)(Box.Z,{display:"flex",flexDirection:"column",id:prefixId&&`${prefixId}__container`,gap:"10px",width:1,className,ref,children:[labels?.top&&(0,jsx_runtime.jsx)(ZigTypography.Z,{color:"neutral200",id:prefixId&&`${prefixId}__title`,children:labels?.top}),(0,jsx_runtime.jsx)(Box.Z,{display:"flex",width:1,gap:1,alignItems:"center",pt:showLabels&&!1!==labelsAbove?3:0,pb:showLabels&&!1===labelsAbove?3:0,position:"relative",children:(0,jsx_runtime.jsxs)(Box.Z,{display:"flex",width:1,gap:"13px",alignItems:"center",children:[showValues&&(0,jsx_runtime.jsx)(SliderLabelValue,{prefixId:prefixId&&`${prefixId}__label-start`,side:"start",labels,min:props.min,max:props.max,value:props.value,labelFormat:labelFormatDefaulted}),(0,jsx_runtime.jsx)(Slider.ZP,{id:prefixId&&`${prefixId}__slider`,marks,track:!1,valueLabelDisplay:labels.invertSliderValues?"off":"auto",valueLabelFormat:valueLabelFormatDefaulted,sx:{width:"auto",flex:1},...props}),showValues&&(0,jsx_runtime.jsx)(SliderLabelValue,{prefixId:prefixId&&`${prefixId}__label-end`,side:"end",labels,min:props.min,max:props.max,value:props.value,labelFormat:labelFormatDefaulted})]})})]})})),inputs_ZigSlider=ZigSlider;try{ZigSlider.displayName="ZigSlider",ZigSlider.__docgenInfo={description:"",displayName:"ZigSlider",props:{classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"(Partial<SliderUnstyledClasses> & { colorPrimary?: string | undefined; colorSecondary?: string | undefined; sizeSmall?: string | undefined; thumbColorPrimary?: string | undefined; thumbColorSecondary?: string | undefined; thumbSizeSmall?: string | undefined; } & Partial<...>) | undefined"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme> | undefined"}},color:{defaultValue:{value:"'primary'"},description:"The color of the component.\nIt supports both default and custom theme colors, which can be added as shown in the\n[palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).",name:"color",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"secondary"'},{value:'"primary"'}]}},labels:{defaultValue:{value:"{}"},description:"",name:"labels",required:!1,type:{name:"SliderLabels | undefined"}},prefixId:{defaultValue:null,description:"",name:"prefixId",required:!1,type:{name:"string | undefined"}},size:{defaultValue:{value:"'medium'"},description:"The size of the slider.",name:"size",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"small"'},{value:'"medium"'}]}},valueLabelFormat:{defaultValue:null,description:"Format slider value, by default it will add a % sign if max is 100. Set to null to always show the number only.",name:"valueLabelFormat",required:!1,type:{name:"((value: number) => string | Element) | undefined"}},labelFormat:{defaultValue:{value:"true"},description:"Format slider labels, set to true (default), to use the same as valueLabelFormat.",name:"labelFormat",required:!1,type:{name:"true | ((value: number) => string | Element) | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/inputs/ZigSlider/index.tsx#ZigSlider"]={docgenInfo:ZigSlider.__docgenInfo,name:"ZigSlider",path:"src/components/inputs/ZigSlider/index.tsx#ZigSlider"})}catch(__react_docgen_typescript_loader_error){}const stories={title:"Inputs/ZigSlider",component:inputs_ZigSlider},ZigSliderControlled=props=>{const[value,setValue]=(0,react.useState)(props.value);return(0,jsx_runtime.jsx)(inputs_ZigSlider,{...props,value,onChange:(e,v)=>setValue(v)})};ZigSliderControlled.displayName="ZigSliderControlled";const WithLabel={args:{labels:{top:"My Slider",start:"Start",end:"End",invertSliderValues:!0}},render:props=>(0,jsx_runtime.jsx)(ZigSliderControlled,{...props})},WithoutLabels={args:{}}}}]);