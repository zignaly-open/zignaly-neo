{"version":3,"file":"components-inputs-ZigInput-stories.8ed39f1d.iframe.bundle.js","mappings":";;;;AAQA;;;;;;;;;;;;ACMA;;;;;;;;AAUA;;;;;;;AASA;;;;;AAOA;;;AAUA;;;AAAA;;;;;;;;;AAmBA;;;;;;;;;AASA;AAWA;;AChDA;;;;;;;;;;AAUA;;;AAGA;;;;;;;;;;;AAWA;;;;;;;;;;;;;AAaA;;;;;AAKA;;;;;;AAMA;;;AAGA;;;;;;;;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;;;;;;AAMA;;;AAKA","sources":["webpack://@zignaly-open/ui/./src/components/display/ZigAlertMessage/styles.ts","webpack://@zignaly-open/ui/./src/components/inputs/TextButton/styles.ts","webpack://@zignaly-open/ui/./src/components/inputs/ZigInput/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Layout = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nexport const Icon = styled.div`\n  margin-right: 8px;\n  display: flex;\n  align-items: center;\n`;\n","import styled from \"styled-components\";\nimport { styledIf } from \"../../../utils/styled\";\nimport Loader from \"components/display/Loader\";\n\nexport const Container = styled.div`\n  position: relative;\n  transition: all 0.2s linear;\n  outline: none;\n  display: inline-flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const LeftElement = styled.div`\n  z-index: 3;\n  position: relative;\n  padding-right: 10px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ButtonLoader = styled(Loader)`\n  justify-content: center;\n  align-items: center;\n  svg {\n    height: 20px;\n    width: 20px;\n  }\n`;\n\nexport const ElementsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const RightElement = styled(LeftElement)`\n  padding-right: 0;\n  padding-left: 10px;\n`;\n\nexport const CenterIcon = styled.div`\n  position: relative;\n  top: 1px;\n`;\n\nexport const LoaderContainer = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\n/**\n * Layout\n */\ninterface LayoutProps {\n  isLoading?: boolean;\n  color?: string;\n}\n\nexport const Layout = styled.button<LayoutProps>`\n  border: none;\n  cursor: pointer;\n  outline: none;\n  position: relative;\n  user-select: none;\n  background: transparent;\n  text-decoration-line: none;\n\n  ${(props) => `\n      ${styledIf(\n        props.isLoading,\n        `\n        ${ElementsContainer}{\n          opacity: 0;\n        }\n        `,\n      )}\n      \n  `}\n  ${(props) => `\n      ${styledIf(\n        props.disabled,\n        `\n        cursor: not-allowed;\n        `,\n      )}\n      \n  `}\n`;\n","import React from \"react\";\nimport { ZigInputProps } from \"./types\";\nimport ErrorMessage from \"components/display/ErrorMessage\";\nimport { styled } from \"@mui/material/styles\";\nimport { TextField } from \"@mui/material\";\nimport TextButton from \"../TextButton\";\n\nconst ZigInput: React.FC<ZigInputProps> = styled<React.FC<ZigInputProps>>(\n  React.forwardRef(({ error, wide, labelAction, helperText, ...props }, ref) => (\n    <TextField\n      inputRef={ref}\n      {...props}\n      inputProps={{\n        ...(props.inputProps || {})\n      }}\n      label={\n        <>\n          {props.label}\n          {labelAction && (\n            <TextButton\n              tabIndex={labelAction.tabIndex}\n              onClick={labelAction.onClick}\n              href={labelAction.href}\n              caption={labelAction.text}\n              id={labelAction.id}\n            />\n          )}\n        </>\n      }\n      variant={\"standard\"}\n      error={!!error}\n      helperText={\n        typeof error === \"string\" && error !== \"\"\n          ? error && <ErrorMessage text={error} />\n          : helperText\n      }\n      InputProps={{ disableUnderline: true, ...(props.InputProps || {}) }}\n      InputLabelProps={{ shrink: true, ...(props.InputLabelProps || {}) }}\n    />\n  )),\n)`\n  ${(props) => props.wide && \"display: block\"};\n\n  .MuiInputLabel-root {\n    display: flex;\n    position: static;\n    flex-direction: row;\n    justify-content: space-between;\n    font-size: 15px !important;\n    line-height: 24px;\n    letter-spacing: 0.55px;\n    color: ${({ theme }) => theme.palette.neutral200} !important;\n    transition: color 0.2s;\n    &.Mui-focused {\n      color: ${({ theme }) => theme.palette.neutral000};\n    }\n    transform: none !important;\n    width: 100%;\n\n    button {\n      float: right;\n    }\n  }\n\n  .MuiInput-root {\n    border: 1px solid ${({ theme }) => theme.palette.neutral600};\n    padding: 12px 24px;\n    margin-top: 4px;\n    min-height: 60px;\n    border-radius: 5px;\n    display: flex;\n    align-items: center;\n    background: rgba(16, 18, 37);\n    background: linear-gradient(90deg, rgb(16 18 37) 0%, rgb(16 18 37) 35%, rgb(16 18 37) 100%);\n    transition: border-color 0.2s;\n\n    &.Mui-disabled {\n      cursor: not-allowed;\n      border-color: ${({ theme }) => theme.palette.neutral700};\n    }\n\n    &.Mui-focused,\n    &:hover {\n      border-color: ${({ theme }) => theme.palette.neutral400};\n    }\n\n    &.Mui-error,\n    &.Mui-error:hover,\n    &.Mui-error.Mui-focused {\n      border-color: ${({ theme }) => theme.palette.redGraphOrError};\n\n      .MuiInputLabel-root {\n        color: ${({ theme }) => theme.palette.neutral200};\n      }\n    }\n  }\n\n  .MuiInput-input {\n    background: transparent;\n    border: none;\n    color: ${({ theme }) => theme.palette.neutral100} !important;\n    outline: none;\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 20px;\n    letter-spacing: 0.55px;\n    width: 100%;\n    font-family: \"Avenir Next\", sans-serif;\n    box-shadow: none !important;\n    resize: none;\n    background: linear-gradient(90deg, rgb(16 18 37) 0%, rgb(16 18 37) 35%, rgb(16 18 37) 100%);\n\n    &:-webkit-autofill {\n      -webkit-box-shadow: 0 0 0 1000px white inset;\n      -webkit-background-clip: text;\n    }\n\n    &:-webkit-autofill:focus {\n      -webkit-box-shadow: 0 0 0 50px white inset;\n      -webkit-text-fill-color: #333;\n    }\n\n    -webkit-text-fill-color: #838b95 !important;\n\n    &::placeholder {\n      -webkit-text-fill-color: ${({ theme }) => theme.palette.neutral400} !important;\n    }\n\n    &.Mui-disabled {\n      cursor: not-allowed;\n      opacity: 0.67;\n      color: ${({ theme }) => theme.palette.neutral100} !important;\n    }\n  }\n`;\n\nexport default ZigInput;\n"],"names":[],"sourceRoot":""}