{"version":3,"file":"components-navigation-MenuDropDown-stories.7ca12a80.iframe.bundle.js","mappings":";;AAOA;;;;;;;;;;;;;AAeA;;;;;;;AAOA;;;;AAcA;;;;;;;;;;;;AAYA;AAuCA;;;;;;;;AAQA;;;;AAOA;AC7GA","sources":["webpack://@zignaly-open/ui/./src/components/navigation/MenuDropDown/styles.ts","webpack://@zignaly-open/ui/./src/assets/icons/arrow-bottom-icon.svg"],"sourcesContent":["import styled from \"styled-components\";\nimport { styledIf } from \"../../../utils/styled\";\n\nexport const Layout = styled.div`\n  position: relative;\n`;\n\nexport const Field = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  overflow: hidden;\n\n  span {\n    overflow-x: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    width: 100%;\n    display: block;\n  }\n`;\n\nexport const ArrowIcon = styled.div`\n  transition: all 0.15s linear;\n  transform-origin: center;\n  width: 28px;\n  height: 28px;\n\n  svg {\n    ${(props: any) => `\n      fill: ${props.theme.neutral300};\n    `}\n    width: 100%;\n    height: 100%;\n  }\n`;\n\ntype ButtonProps = {\n  center?: boolean;\n  isActiveDropDown: boolean;\n  focused: boolean;\n};\n\nexport const Button = styled.div<ButtonProps>`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 22px;\n  padding: 14px 28px;\n  justify-content: space-between;\n  user-select: none;\n  height: 56px;\n  cursor: pointer;\n  background: #0f0f25;\n\n  ${({ center, theme, isActiveDropDown, focused }) => `    \n    ${styledIf(\n      focused,\n      `\n      span {\n        color: ${theme.highlighted};\n      }\n    `,\n      `\n      span {\n        color: ${theme.neutral300};\n      }\n    `,\n    )}\n    \n    ${styledIf(\n      isActiveDropDown,\n      `\n      background: #11152b;\n      box-shadow: 0px 2.5px 13.5px 1px rgba(0, 0, 0, 0.42);\n      border-color: transparent !important;\n\n      ${ArrowIcon} {\n        transform: rotate(-180deg);\n      }\n    `,\n    )}\n    \n    ${styledIf(\n      center,\n      `\n      ${Field} {\n        text-align: center;\n      }\n    `,\n    )}\n  `}\n`;\n\nexport const DropDown = styled.div<any>`\n  top: 100%;\n  left: 0;\n  right: 0;\n  position: absolute;\n  width: 100%;\n  overflow: auto;\n\n  ${(props: any) => `\n    background: #12152C;\n    max-height: ${props.maxHeight ?? \"200px\"};\n  `}\n\n  box-shadow: 0px 2.5px 13.5px 1px rgba(0, 0, 0, 0.42);\n  border-radius: 0 0 8px 8px;\n  border-top: 1px solid ${({ theme }) => theme.neutral700}80;\n`;\n","function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nvar SvgArrowBottomIcon = function SvgArrowBottomIcon(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    className: \"zig-icon\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.293 9.29302L12 13.586L7.70701 9.29302C7.51841 9.11086 7.26581 9.01007 7.00361 9.01235C6.74141 9.01462 6.4906 9.11979 6.30519 9.3052C6.11978 9.49061 6.01461 9.74142 6.01234 10.0036C6.01006 10.2658 6.11085 10.5184 6.29301 10.707L11.293 15.707C11.4805 15.8945 11.7348 15.9998 12 15.9998C12.2652 15.9998 12.5195 15.8945 12.707 15.707L17.707 10.707C17.8025 10.6148 17.8787 10.5044 17.9311 10.3824C17.9835 10.2604 18.0111 10.1292 18.0123 9.99642C18.0134 9.86364 17.9881 9.73196 17.9378 9.60907C17.8876 9.48617 17.8133 9.37452 17.7194 9.28063C17.6255 9.18673 17.5139 9.11248 17.391 9.0622C17.2681 9.01192 17.1364 8.98662 17.0036 8.98777C16.8708 8.98892 16.7396 9.01651 16.6176 9.06892C16.4956 9.12133 16.3853 9.19751 16.293 9.29302Z\",\n    fill: props.color\n  }));\n};\n\nexport { SvgArrowBottomIcon as ReactComponent };"],"names":[],"sourceRoot":""}