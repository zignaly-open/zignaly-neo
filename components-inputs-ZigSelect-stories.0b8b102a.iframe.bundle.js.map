{"version":3,"file":"components-inputs-ZigSelect-stories.0b8b102a.iframe.bundle.js","mappings":";;;;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACgBA;AACA;AACA;AACA;;;;;;AAMA;AAEA;;;;AAIA;;;;;AAKA;AAEA;;;AAMA;;AAIA;;;;;;;AAOA;;AAGA;;;;;;;;;;;AAWA;;;;;;;;;AAWA;AACA;AACA;;AAIA;;;;;;;;;AAUA;;AAIA;AAEA;;;;AAIA;AACA;AACA;;;;AAIA;;;;;;;;;AASA;;AAEA;;;AAMA;;;;;;;AAWA;;;;AAMA","sources":["webpack://@zignaly-open/ui/./src/components/display/ZigAlertMessage/styles.ts","webpack://@zignaly-open/ui/./src/components/inputs/ZigSelect/styles.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Layout = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nexport const Icon = styled.div`\n  margin-right: 8px;\n  display: flex;\n  align-items: center;\n`;\n","import { Box, GlobalStyles, styled } from \"@mui/material\";\nimport { NiceScrollbar } from \"utils/css\";\nimport React from \"react\";\nimport { css } from \"@emotion/react\";\nimport { StyledComponent } from \"@emotion/styled\";\nimport { BoxTypeMap } from \"@mui/system\";\n\ntype Props = {\n  error?: string | boolean;\n  width?: number;\n  small?: boolean;\n  outlined?: boolean;\n  showBorder?: boolean;\n  hoverBackground?: boolean;\n};\n\nexport const StyledSelectWrapper: StyledComponent<BoxTypeMap & Props> = styled(Box)<Props>`\n  gap: 10px;\n  display: flex;\n  flex-direction: column;\n\n  .zig-react-select {\n    &__control {\n      border: 1px solid\n        ${({ theme, error }) => (error ? theme.palette.redGraphOrError : theme.palette.neutral600)};\n      ${({ showBorder }) => !showBorder && \"border: none;\"};\n      padding: ${({ small }) => (small ? \"3px 16px 3px 9px\" : \"11px 24px 11px 16px\")};\n      min-height: ${({ small }) => (small ? \"0\" : \"60px\")};\n      border-radius: 5px;\n      display: flex;\n      align-items: center;\n      cursor: pointer;\n      flex-wrap: nowrap;\n      ${({ outlined, theme }) =>\n        css`\n          background: ${outlined ? \"transparent\" : theme.palette.backgrounds.selectInputFill};\n        `}\n      transition: border-color 0.2s;\n\n      ${({ width }) => width && `width: ${width}${width?.toString().includes(\"%\") ? \"\" : \"px\"}`};\n\n      padding-right: 0;\n\n      &:hover {\n        border-color: ${({ theme, error }) =>\n          error ? theme.palette?.redGraphOrError : theme.palette.neutral400};\n        ${({ outlined, hoverBackground }) =>\n          outlined &&\n          hoverBackground &&\n          css`\n            background-color: rgba(118, 130, 247, 0.08);\n          `}\n        ${({ outlined, theme }) =>\n          outlined &&\n          css`\n            .zig-react-select__single-value {\n              color: ${theme.palette.neutral000} !important;\n            }\n          `}\n      }\n\n      &--is-focused {\n        border: 1px solid\n          ${({ theme, error }) =>\n            error ? theme.palette.redGraphOrError : theme.palette.neutral400};\n        box-shadow: none !important;\n        ${({ showBorder }) => !showBorder && \"border: none;\"};\n      }\n    }\n\n    &__placeholder,\n    &__single-value {\n      padding: 0;\n      margin-left: 0;\n    }\n\n    &__value-container {\n      ${({ small }) =>\n        small &&\n        css`\n          padding: 0 5px;\n        `}\n    }\n\n    &__placeholder,\n    &__single-value,\n    &__input-container,\n    &__input {\n      font-size: ${({ small }) => (small ? \"13px\" : \"16px\")};\n      line-height: ${({ small }) => (small ? \"15px\" : \"20px\")};\n      ${({ small }) =>\n        small\n          ? css`\n              padding-bottom: 1px;\n            `\n          : \"\"};\n    }\n\n    &__placeholder {\n      white-space: nowrap;\n    }\n\n    &__single-value,\n    &__input {\n      ${({ small }) =>\n        small\n          ? css`\n              height: 13px;\n            `\n          : \"\"};\n      color: ${({ theme }) => theme.palette.neutral100} !important;\n    }\n\n    .zig-react-select__menu {\n      border: 1px solid ${({ theme }) => theme.palette.neutral600} !important;\n      color: ${({ theme }) => theme.palette.neutral200} !important;\n      background: ${({ theme }) => theme.palette.neutral800} !important;\n    }\n\n    &__placeholder {\n      color: ${({ theme }) => theme.palette.neutral400} !important;\n      opacity: 0.5;\n    }\n\n    &__input-container {\n      margin-left: 0;\n    }\n\n    &__indicator {\n      color: ${({ theme }) => theme.palette.neutral400};\n      padding-top: 6px;\n      ${({ width }) =>\n        width &&\n        width <= 100 &&\n        css`\n          padding: 0 2px;\n        `};\n      ${({ small }) =>\n        small &&\n        css`\n          padding: 0 4px;\n          width: 22px;\n          height: 22px;\n        `};\n    }\n  }\n`;\n\nexport const ZigSelectGlobalStyle = (\n  <GlobalStyles\n    styles={css`\n      .zig-react-select {\n        &__menu {\n          &-list {\n            ${NiceScrollbar.toString()};\n          }\n        }\n      }\n    `}\n  />\n);\n"],"names":[],"sourceRoot":""}