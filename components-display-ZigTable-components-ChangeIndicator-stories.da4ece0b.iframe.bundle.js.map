{"version":3,"file":"components-display-ZigTable-components-ChangeIndicator-stories.da4ece0b.iframe.bundle.js","mappings":";;;;AAWA;;AAuBA;;;;;;AAXA;;AAEA;AASA;;;;;AAOA;;;;;AAOA;;AAIA;;;;;;;AAOA;AAKA;;;;;;;AASA","sources":["webpack://@zignaly-open/ui/./src/components/display/ZigTable/components/ChangeIndicator/styles.ts"],"sourcesContent":["import styled from \"styled-components\";\nimport { ReactComponent as CaretTriangleIcon } from \"assets/icons/caret-triangle-icon.svg\";\nimport muiStyled from \"@emotion/styled\";\nimport ZigTypography from \"../../../ZigTypography\";\n\nexport const Layout = styled.div`\n  display: grid;\n  grid-row: auto;\n  justify-content: center;\n`;\n\nexport const Container = styled.div`\n  text-align: center;\n`;\n\nexport const TropyContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-left: 5px;\n`;\n\nexport const Value = muiStyled(ZigTypography)<{ isPositive: boolean }>`\n  display: inline;\n  ${(props) => `\n    font-size: 12px;\n    font-weight: 500;\n    color: ${\n      props.isPositive ? props.theme.palette.greenGraph : props.theme.palette.redGraphOrError\n    };\n  `}\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Inline = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Subtitle = muiStyled(ZigTypography)`\n  display: block;\n`;\n\nexport const Indicator = styled(CaretTriangleIcon)<{ isPositive: boolean }>`\n  margin-right: 6px;\n  vertical-align: middle;\n  margin-left: 6px;\n  width: 8px;\n  height: 8px;\n\n  ${({ isPositive }) => `\n    transform: ${isPositive ? \"rotateX(0deg)\" : \"rotateX(180deg)\"};\n  `}\n`;\n\nexport const ValueIndicator = styled(ZigTypography)<{\n  smallPct: boolean;\n}>`\n  display: inline;\n  font-size: 15px !important;\n  line-height: 24px !important;\n  font-weight: 500;\n\n  span::after {\n    content: \"${({ smallPct }) => (smallPct ? \"%\" : \"\")}\";\n    font-size: 70%;\n    transform: translateY(-13%);\n    display: inline-block;\n  }\n`;\n"],"names":[],"sourceRoot":""}