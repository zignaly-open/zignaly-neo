name: PS2 Production deploy
on:
  push:
    tags:
      - 'release-ps2-*'

jobs:
  pre_job:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
      paths_result: ${{ steps.skip_check.outputs.paths_result }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v4
        with:
          paths_filter: |
            ui_repos:
              paths:
                - 'packages/ps2/**/*'
                - 'packages/zignaly-ui/**/*'

  build:
    name: PS2 Prod deploy
    needs: pre_job
    timeout-minutes: 20
    if: needs.pre_job.outputs.should_skip != 'true' || !fromJSON(needs.pre_job.outputs.paths_result).ui_repos.should_skip
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Create client .env file
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_EXTEND_ESLINT: true
          envkey_DISABLE_ESLINT_PLUGIN: true
          envkey_ESLINT_NO_DEV_ERRORS: true
          envkey_REACT_APP_LIVE_SESSION_TRACK_ID: ${{ secrets.PS2_LIVE_SESSION_TRACK_ID }}
          envkey_REACT_APP_SEGMENT_KEY: ${{ secrets.PS2_SEGMENT_KEY }}
          envkey_REACT_APP_ENABLE_TRACKING: true
          envkey_REACT_APP_SEGMENT_SCRIPT_SRC: ${{ secrets.PS2_SEGMENT_SCRIPT_SRC }}
          # well yeah we could store all this as action secrets in the repo
          # but would that make any sense since these values are not secret
          # and anyone with a half-functioning brain can reverse-engineer those from the source code
          envkey_REACT_APP_GTM_ID: GTM-5ZQ4JLK
          envkey_REACT_APP_BASE_API: https://zignaly.com/new_api
          envkey_REACT_APP_WALLET_API: https://wallet.zignaly.com/api
          envkey_REACT_APP_REFERRALS_API: https://referrals.zignaly.com/
          envkey_REACT_APP_SEGMENT_NAME: zignaly
          envkey_REACT_APP_SENTRY_DNS: https://b87b3bf895ff4c0cb0e1bee22f3a0648@o967264.ingest.sentry.io/6492584
          envkey_REACT_APP_CUSTOMER_IO_ORG_ID: 5b1f596d-a830-4bb9-8ef3-81a4bb65f8e7
          envkey_REACT_APP_CUSTOMER_IO_SITE_ID: e2599a7a80f3cf2fdbb5
          directory: packages/ps2
          file_name: .env
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: 'yarn'
      - name: Install Lerna
        run: yarn global add lerna
      - name: Restore Lerna modules
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Bootstrap packages
        run: lerna bootstrap --scope=@zignaly-open/ps2
      - name: Build client
        run: lerna run build --scope=@zignaly-open/ps2
      - uses: jakejarvis/s3-sync-action@master
        with:
          args: --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_PS2_PROD_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_PS2_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_PS2_SECRET_KEY }}
          AWS_REGION: 'us-east-1'
          SOURCE_DIR: 'packages/ps2/build'

  invalidate:
    name: Invalidate Cloudfront
    needs: build
    runs-on: ubuntu-latest
    environment: prod
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get filed to invalidate
        id: diff_files
        run: |
          CLOUDFRONT_FORMAT=$(
            (find public/locales -type f -print && echo "index.html" && echo "version.json" )| awk {'print "/"$1'} | tr '\n' ' '
          )
          CLOUDFLARE_FORMAT=$(
            (find public/locales -type f -print && echo "index.html" && echo "version.json" )| awk {'print "https://app.zignaly.com/"$1'} | tr '\n' ' '
          )
          
          echo $CLOUDFRONT_FORMAT
          echo $CLOUDFLARE_FORMAT
          
          echo "cloudfront=$CLOUDFRONT_FORMAT" >> $GITHUB_OUTPUT
          echo "cloudflare=$CLOUDFLARE_FORMAT" >> $GITHUB_OUTPUT
        working-directory: ./packages/ps2
      - name: Invalidate Cloudflare
        uses: strrife/cloudflare-chunked-purge-action@master
        env:
          # Zone is required by both authentication methods
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE }}
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_KEY }}
          PURGE_URLS: ${{ steps.diff_files.outputs.cloudflare }}
      - name: Invalidate CloudFront
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: ${{ secrets.AWS_PS2_PROD_DISTRIBUTION }}
          PATHS: ${{ steps.diff_files.outputs.cloudfront }}
          AWS_REGION: 'us-east-1'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_PS2_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_PS2_SECRET_KEY }}
