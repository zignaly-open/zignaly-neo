{"version":3,"file":"components-display-Table-components-PercentageIndicator-stories.f06ee7b7.iframe.bundle.js","mappings":";;;;AAUA;;AAqBA;;;;;;AATA;;AAEA;AAOA;;;;;AAOA;;;;;AAOA;;AAIA;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACyEA;AC3HA;;;ACGA;AAHA;;;;;AAqBA;;AAAA;;;;;;AAMA","sources":["webpack://@zignaly-open/ui/./src/components/display/Table/components/PercentageIndicator/styles.ts","webpack://@zignaly-open/ui/./src/components/display/Typography/styles.ts","webpack://@zignaly-open/ui/./src/components/display/Typography/types.tsx","webpack://@zignaly-open/ui/./src/components/styled.ts"],"sourcesContent":["import styled from \"styled-components\";\nimport { ReactComponent as CaretTriangleIcon } from \"assets/icons/caret-triangle-icon.svg\";\nimport Typography from \"components/display/Typography\";\n\nexport const Layout = styled.div`\n  display: grid;\n  grid-row: auto;\n  justify-content: center;\n`;\n\nexport const Container = styled.div`\n  text-align: center;\n`;\n\nexport const TropyContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-left: 5px;\n`;\n\nexport const Value = styled(Typography)<{ isPositive: boolean }>`\n  display: inline;\n  ${(props) => `\n    font-size: 12px;\n    font-weight: 500;\n    color: ${props.isPositive ? props.theme.greenGraph : props.theme.redGraphOrError};\n  `}\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Inline = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Subtitle = styled(Typography)`\n  display: block;\n`;\n\nexport const Indicator = styled(CaretTriangleIcon)<{ isPositive: boolean }>`\n  margin-right: 6px;\n  vertical-align: middle;\n\n  ${({ isPositive }) => `\n    transform: ${isPositive ? \"rotateX(0deg)\" : \"rotateX(180deg)\"};\n  `}\n\n  &.graph {\n    margin-left: 6px;\n    width: 8px;\n    height: 8px;\n  }\n`;\n","import styled from \"styled-components\";\nimport { styledIf } from \"utils/styled\";\n\nconst getWeight = (weight: string) => {\n  if (weight === \"demibold\") {\n    return 600;\n  } else if (weight === \"medium\") {\n    return 500;\n  } else {\n    return 400;\n  }\n};\n\ninterface LayoutProps {\n  color: string;\n  underline: boolean;\n  weight: string;\n  marginRight?: number;\n  marginLeft?: number;\n  marginTop?: number;\n  marginBottom?: number;\n}\n\nexport const Layout = styled.h1<LayoutProps>`\n  font-family: \"Avenir next\", \"Red Hat Text\", sans-serif;\n  margin: 0;\n  padding: 0;\n  font-weight: 500;\n\n  &.h1 {\n    font-size: 22px;\n    line-height: 36px;\n    letter-spacing: 0.55px;\n  }\n\n  &.h2 {\n    font-size: 18px;\n    line-height: 28px;\n    letter-spacing: 0.55px;\n  }\n\n  &.h3 {\n    font-size: 15px;\n    line-height: 24px;\n    letter-spacing: 0.55px;\n  }\n\n  &.h4 {\n    font-size: 13px;\n    line-height: 20px;\n    letter-spacing: 0.55px;\n  }\n\n  &.h5 {\n    font-size: 11px;\n    line-height: 16px;\n    letter-spacing: 0.55px;\n  }\n\n  &.bigNumber {\n    font-size: 26px;\n    line-height: 40px;\n    letter-spacing: 0.55px;\n  }\n\n  &.body1 {\n    font-size: 15px;\n    line-height: 24px;\n    letter-spacing: 0.55px;\n  }\n\n  &.body2 {\n    font-size: 13px;\n    line-height: 20px;\n    letter-spacing: 0.55px;\n  }\n\n  &.buttonxl {\n    font-size: 16px;\n    line-height: 20px;\n    letter-spacing: 1.1px;\n    font-weight: 600;\n  }\n\n  &.buttonl {\n    font-size: 13px;\n    line-height: 18px;\n    letter-spacing: 1.1px;\n    font-weight: 600;\n  }\n\n  &.buttonm {\n    font-size: 11px;\n    line-height: 14px;\n    letter-spacing: 1.1px;\n    font-weight: 600;\n  }\n\n  &.buttonsm {\n    font-size: 11px;\n    line-height: 12px;\n    font-weight: 600;\n    letter-spacing: 1.1px;\n  }\n\n  &.inputl {\n    font-size: 16px;\n    line-height: 20px;\n    font-weight: 400;\n    letter-spacing: 0.55px;\n  }\n\n  &.inputm {\n    font-size: 13px;\n    line-height: 18px;\n    font-weight: 400;\n    letter-spacing: 0.55px;\n  }\n\n  &.labelm {\n    font-weight: 400;\n    font-size: 15px;\n    line-height: 24px;\n    letter-spacing: 0.55px;\n  }\n\n  ${(props) => `\n    color: inherit;\n\n    ${styledIf(\n      props.color,\n      `\n      color: ${props.theme[props.color]};    \n    `,\n    )}\n    ${styledIf(\n      props.underline,\n      `\n      text-decoration-color: ${props.theme[props.color]};\n      text-decoration-line: underline;\n    `,\n    )}\n    ${styledIf(\n      props.weight,\n      `\n      font-weight: ${getWeight(props.weight)};\n    `,\n    )}\n  `}\n`;\n","import React from \"react\";\nimport { dark } from \"theme\";\n\nexport const componentByVariants = {\n  h1: \"span\",\n  h2: \"span\",\n  h3: \"span\",\n  h4: \"span\",\n  h5: \"span\",\n  bigNumber: \"span\",\n  body1: \"span\",\n  body2: \"span\",\n  buttonxl: \"span\",\n  buttonl: \"span\",\n  buttonm: \"span\",\n  buttonsm: \"span\",\n  inputl: \"span\",\n  inputm: \"span\",\n  labelm: \"span\",\n};\n\nexport const weightByType = {\n  medium: \"medium\",\n  demibold: \"demibold\",\n  regular: \"regular\",\n};\n\nexport interface TypographyProps {\n  variant?: keyof typeof componentByVariants;\n  weight?: keyof typeof weightByType;\n  className?: string;\n  component?: any;\n  color?: keyof typeof dark;\n  underline?: boolean;\n  children?: React.ReactNode; // optional to support <Trans />\n  marginRight?: number;\n  marginLeft?: number;\n  marginTop?: number;\n  marginBottom?: number;\n}\n","import styled from \"styled-components\";\nimport Typography from \"./display/Typography\";\n\nexport const ButtonGroup = styled.div`\n  display: grid;\n\n  ${(props: any) => `\n    grid-template-columns: repeat(${props.children.length}, minmax(0%, 100%));\n    gap: 8px;\n  `}\n`;\n\nexport const MarginContainer = styled.div`\n  margin: 0 auto;\n  max-width: 1430px;\n  padding: 0 22px;\n  width: 100%;\n`;\n\nexport const PageContainer = styled(MarginContainer)`\n  padding: 52px 22px 0;\n`;\n\n// TODO: replace with proper styled comp usages instead of classes\nexport const ValueIndicator = styled(Typography)<any>`\n  display: inline;\n  font-size: 15px !important;\n  line-height: 24px !important;\n  font-weight: 500;\n\n  ${(props: any) => `\n    \n    &.zero {\n      color: ${props.theme.neutral300}\n    }\n    \n    &.positive {\n      color: ${props.theme.greenGraph};\n    }\n    \n    &.negative {\n      color: ${props.theme.redGraphOrError};\n    }\n  `}\n`;\n"],"names":[],"sourceRoot":""}