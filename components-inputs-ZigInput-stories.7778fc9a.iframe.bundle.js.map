{"version":3,"file":"components-inputs-ZigInput-stories.7778fc9a.iframe.bundle.js","mappings":";;;;AAQA;;;;;;;;;;;;;;;ACqCA;;;;;;;AASA;ACVA;;;;;;;;;;AAUA;;;AAGA;;;;;;;;;;;AAWA;;;;;;;;;;;;;AAaA;;;;;AAKA;;;;;;AAMA;;;AAGA;;;;;;;;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;;;;;;AAMA;;;AAKA","sources":["webpack://@zignaly-open/ui/./src/components/display/ZigAlertMessage/styles.ts","webpack://@zignaly-open/ui/./src/components/inputs/ZigButton/index.tsx","webpack://@zignaly-open/ui/./src/components/inputs/ZigInput/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Layout = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nexport const Icon = styled.div`\n  margin-right: 8px;\n  display: flex;\n  align-items: center;\n`;\n","import React from \"react\";\nimport { LoadingButton, LoadingButtonProps } from \"@mui/lab\";\nimport { ButtonGroup, styled, Tooltip } from \"@mui/material\";\nimport { dark } from \"../../../theme\";\n\nexport type ZigButtonProps = Omit<LoadingButtonProps, \"size\"> & {\n  size?: LoadingButtonProps[\"size\"] | \"xlarge\";\n  ctaId?: string;\n  tooltip?: string;\n  active?: boolean;\n};\n\nconst ZigButton = ({ active, tooltip, ctaId, color, size, ...props }: ZigButtonProps) => {\n  const button = (\n    <LoadingButton\n      data-tack-cta={ctaId}\n      // it wasn't me lol\n      size={size as LoadingButtonProps[\"size\"]}\n      {...props}\n      // hack to preserve old behavior but allow for normal mui theming\n      color={props.variant === \"outlined\" && !color ? \"secondary\" : color}\n      className={active ? \"MuiButton-active\" : \"\"}\n    />\n  );\n  return tooltip ? (\n    <Tooltip title={tooltip}>\n      {/* if we want to have a tooltip and have the button be disabled, we need a new container */}\n      {props.disabled ? <span>{button}</span> : button}\n    </Tooltip>\n  ) : (\n    button\n  );\n};\n\nexport const ZigButtonGroup = styled(ButtonGroup)`\n  .MuiButton-root {\n    border-right-width: 0 !important;\n\n    &:last-child {\n      border-right-width: 1px !important;\n    }\n\n    &:hover,\n    &.MuiButton-active {\n      z-index: 3;\n      box-shadow: 1px 0 0 ${dark.neutral400};\n    }\n\n    &.Mui-disabled {\n      border-color: rgba(255, 255, 255, 0.1);\n    }\n  }\n` as typeof ButtonGroup;\n\nexport default ZigButton as typeof LoadingButton & typeof ZigButton;\n","import React from \"react\";\nimport { ZigInputProps } from \"./types\";\nimport ErrorMessage from \"components/display/ErrorMessage\";\nimport { styled } from \"@mui/material/styles\";\nimport { TextField } from \"@mui/material\";\nimport TextButton from \"../TextButton\";\nimport ZigButton from \"../ZigButton\";\n\nconst ZigInput: React.FC<ZigInputProps> = styled<React.FC<ZigInputProps>>(\n  React.forwardRef(({ error, wide, labelAction, helperText, ...props }, ref) => (\n    <TextField\n      inputRef={ref}\n      {...props}\n      inputProps={{\n        ...(props.inputProps || {}),\n      }}\n      label={\n        <>\n          {props.label}\n          {labelAction && (\n            <ZigButton\n              variant={\"text\"}\n              tabIndex={labelAction.tabIndex}\n              onClick={labelAction.onClick}\n              href={labelAction.href}\n              id={labelAction.id}\n            >\n              {labelAction.text}\n            </ZigButton>\n          )}\n        </>\n      }\n      variant={\"standard\"}\n      error={!!error}\n      helperText={\n        typeof error === \"string\" && error !== \"\"\n          ? error && <ErrorMessage text={error} />\n          : helperText\n      }\n      InputProps={{ disableUnderline: true, ...(props.InputProps || {}) }}\n      InputLabelProps={{ shrink: true, ...(props.InputLabelProps || {}) }}\n    />\n  )),\n)`\n  ${(props) => props.wide && \"display: block\"};\n\n  .MuiInputLabel-root {\n    display: flex;\n    position: static;\n    flex-direction: row;\n    justify-content: space-between;\n    font-size: 15px !important;\n    line-height: 24px;\n    letter-spacing: 0.55px;\n    color: ${({ theme }) => theme.palette.neutral200} !important;\n    transition: color 0.2s;\n    &.Mui-focused {\n      color: ${({ theme }) => theme.palette.neutral000};\n    }\n    transform: none !important;\n    width: 100%;\n\n    button {\n      float: right;\n    }\n  }\n\n  .MuiInput-root {\n    border: 1px solid ${({ theme }) => theme.palette.neutral600};\n    padding: 12px 24px;\n    margin-top: 4px;\n    min-height: 60px;\n    border-radius: 5px;\n    display: flex;\n    align-items: center;\n    background: rgba(16, 18, 37);\n    background: linear-gradient(90deg, rgb(16 18 37) 0%, rgb(16 18 37) 35%, rgb(16 18 37) 100%);\n    transition: border-color 0.2s;\n\n    &.Mui-disabled {\n      cursor: not-allowed;\n      border-color: ${({ theme }) => theme.palette.neutral700};\n    }\n\n    &.Mui-focused,\n    &:hover {\n      border-color: ${({ theme }) => theme.palette.neutral400};\n    }\n\n    &.Mui-error,\n    &.Mui-error:hover,\n    &.Mui-error.Mui-focused {\n      border-color: ${({ theme }) => theme.palette.redGraphOrError};\n\n      .MuiInputLabel-root {\n        color: ${({ theme }) => theme.palette.neutral200};\n      }\n    }\n  }\n\n  .MuiInput-input {\n    background: transparent;\n    border: none;\n    color: ${({ theme }) => theme.palette.neutral100} !important;\n    outline: none;\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 20px;\n    letter-spacing: 0.55px;\n    width: 100%;\n    font-family: \"Avenir Next\", sans-serif;\n    box-shadow: none !important;\n    resize: none;\n    background: linear-gradient(90deg, rgb(16 18 37) 0%, rgb(16 18 37) 35%, rgb(16 18 37) 100%);\n\n    &:-webkit-autofill {\n      -webkit-box-shadow: 0 0 0 1000px white inset;\n      -webkit-background-clip: text;\n    }\n\n    &:-webkit-autofill:focus {\n      -webkit-box-shadow: 0 0 0 50px white inset;\n      -webkit-text-fill-color: #333;\n    }\n\n    -webkit-text-fill-color: #838b95 !important;\n\n    &::placeholder {\n      -webkit-text-fill-color: ${({ theme }) => theme.palette.neutral400} !important;\n    }\n\n    &.Mui-disabled {\n      cursor: not-allowed;\n      opacity: 0.67;\n      color: ${({ theme }) => theme.palette.neutral100} !important;\n    }\n  }\n`;\n\nexport default ZigInput;\n"],"names":[],"sourceRoot":""}