{"version":3,"file":"components-display-Toaster-stories.4fd66522.iframe.bundle.js","mappings":";;AAMA;;;;;;;;;;AAYA;;;;;;;;;;AAUA;AAGA;;;;;;;;;AASA;AAGA;;;;;;;;;AASA;AAGA;AACA;;;;;;;;AAQA;AAGA;AACA;;;AAGA;AACA;;;AAGA;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC+CA;AC3HA","sources":["webpack://@zignaly-open/ui/./src/components/display/Toaster/styles.ts","webpack://@zignaly-open/ui/./src/components/display/Typography/styles.ts","webpack://@zignaly-open/ui/./src/components/display/Typography/types.tsx"],"sourcesContent":["import styled, { css } from \"styled-components\";\n\nexport const Caption = styled.div`\n  margin: 0 8px;\n`;\n\nexport const IconContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n\n  svg {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport const ToastContainer = styled.div<{ variant: string; size: string }>`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n  box-shadow: 4px 6px 4px rgba(0, 0, 0, 0.25);\n  border-radius: 5px;\n  position: absolute;\n\n  ${(props) =>\n    props.size === \"large\" &&\n    css`\n      ${IconContainer} {\n        width: 26px;\n        height: 26px;\n      }\n\n      padding: 11px 24px;\n      height: 48px;\n    `}\n\n  ${(props) =>\n    props.size === \"small\" &&\n    css`\n      ${IconContainer} {\n        width: 24px;\n        height: 24px;\n      }\n\n      padding: 4px 18px;\n      height: 32px;\n    `}\n\n  ${(props) =>\n    props.variant === \"success\" &&\n    css`\n      ${Caption} {\n        color: ${props.theme.greenGraph};\n      }\n\n      border: 1px solid #122431;\n      background: #122431;\n    `}\n\n\n  ${(props) =>\n    props.variant === \"info\" &&\n    css`\n      ${Caption} {\n        color: ${props.theme.neutral200};\n      }\n\n      border: 1px solid ${props.theme.neutral600};\n      background: ${props.theme.neutral600};\n    `}\n\n  ${(props) =>\n    props.variant === \"error\" &&\n    css`\n      ${Caption} {\n        color: ${props.theme.redGraphOrError};\n      }\n\n      border: 1px solid #231630;\n      background: #321e46;\n    `}\n`;\n","import styled from \"styled-components\";\nimport { styledIf } from \"utils/styled\";\n\nconst getWeight = (weight: string) => {\n  if (weight === \"demibold\") {\n    return 600;\n  } else if (weight === \"medium\") {\n    return 500;\n  } else {\n    return 400;\n  }\n};\n\ninterface LayoutProps {\n  color: string;\n  underline: boolean;\n  weight: string;\n  marginRight?: number;\n  marginLeft?: number;\n  marginTop?: number;\n  marginBottom?: number;\n}\n\nexport const Layout = styled.h1<LayoutProps>`\n  font-family: \"Avenir next\", \"Red Hat Text\", sans-serif;\n  margin: 0;\n  padding: 0;\n  font-weight: 500;\n\n  &.h1 {\n    font-size: 22px;\n    line-height: 36px;\n    letter-spacing: 0.55px;\n  }\n\n  &.h2 {\n    font-size: 18px;\n    line-height: 28px;\n    letter-spacing: 0.55px;\n  }\n\n  &.h3 {\n    font-size: 15px;\n    line-height: 24px;\n    letter-spacing: 0.55px;\n  }\n\n  &.h4 {\n    font-size: 13px;\n    line-height: 20px;\n    letter-spacing: 0.55px;\n  }\n\n  &.h5 {\n    font-size: 11px;\n    line-height: 16px;\n    letter-spacing: 0.55px;\n  }\n\n  &.bigNumber {\n    font-size: 26px;\n    line-height: 40px;\n    letter-spacing: 0.55px;\n  }\n\n  &.body1 {\n    font-size: 15px;\n    line-height: 24px;\n    letter-spacing: 0.55px;\n  }\n\n  &.body2 {\n    font-size: 13px;\n    line-height: 20px;\n    letter-spacing: 0.55px;\n  }\n\n  &.buttonxl {\n    font-size: 16px;\n    line-height: 20px;\n    letter-spacing: 1.1px;\n    font-weight: 600;\n  }\n\n  &.buttonl {\n    font-size: 13px;\n    line-height: 18px;\n    letter-spacing: 1.1px;\n    font-weight: 600;\n  }\n\n  &.buttonm {\n    font-size: 11px;\n    line-height: 14px;\n    letter-spacing: 1.1px;\n    font-weight: 600;\n  }\n\n  &.buttonsm {\n    font-size: 11px;\n    line-height: 12px;\n    font-weight: 600;\n    letter-spacing: 1.1px;\n  }\n\n  &.inputl {\n    font-size: 16px;\n    line-height: 20px;\n    font-weight: 400;\n    letter-spacing: 0.55px;\n  }\n\n  &.inputm {\n    font-size: 13px;\n    line-height: 18px;\n    font-weight: 400;\n    letter-spacing: 0.55px;\n  }\n\n  &.labelm {\n    font-weight: 400;\n    font-size: 15px;\n    line-height: 24px;\n    letter-spacing: 0.55px;\n  }\n\n  ${(props) => `\n    color: inherit;\n\n    ${styledIf(\n      props.color,\n      `\n      color: ${props.theme[props.color]};    \n    `,\n    )}\n    ${styledIf(\n      props.underline,\n      `\n      text-decoration-color: ${props.theme[props.color]};\n      text-decoration-line: underline;\n    `,\n    )}\n    ${styledIf(\n      props.weight,\n      `\n      font-weight: ${getWeight(props.weight)};\n    `,\n    )}\n  `}\n`;\n","import React from \"react\";\nimport { dark } from \"theme\";\n\nexport const componentByVariants = {\n  h1: \"span\",\n  h2: \"span\",\n  h3: \"span\",\n  h4: \"span\",\n  h5: \"span\",\n  bigNumber: \"span\",\n  body1: \"span\",\n  body2: \"span\",\n  buttonxl: \"span\",\n  buttonl: \"span\",\n  buttonm: \"span\",\n  buttonsm: \"span\",\n  inputl: \"span\",\n  inputm: \"span\",\n  labelm: \"span\",\n};\n\nexport const weightByType = {\n  medium: \"medium\",\n  demibold: \"demibold\",\n  regular: \"regular\",\n};\n\nexport interface TypographyProps {\n  variant?: keyof typeof componentByVariants;\n  weight?: keyof typeof weightByType;\n  className?: string;\n  component?: any;\n  color?: keyof typeof dark;\n  underline?: boolean;\n  children?: React.ReactNode; // optional to support <Trans />\n  marginRight?: number;\n  marginLeft?: number;\n  marginTop?: number;\n  marginBottom?: number;\n}\n"],"names":[],"sourceRoot":""}